
use-project /boost : $(/boost) ;
#use-project /http : $(/http) ;
use-project /libtorrent : $(/libtorrent) ;
use-project /WTL : $(/WTL) ;
use-project /osLibs : $(/osLibs) ;
use-project /global_log : $(/global_log) ;

SOURCES =
	Halite.cpp
	stdAfx.cpp
	HaliteWindow.cpp
	HaliteListViewCtrl.cpp
	HaliteDialog.cpp
	AdvHaliteDialog.cpp
	ConfigOptions.cpp
	halTorrent.cpp
	GlobalIni.cpp
#	halXmlRpc.cpp
	NTray.cpp
	;
	
RESOURCES =
	Halite.rc
	;

LIBS = 
	comctl32
	user32
	kernel32
	comdlg32
	advapi32
	gdi32	
	uxtheme	
	;

project Halite

	: requirements
	
	<library>/boost/signals//boost_signals/<link>static
	<library>/boost/serialization//boost_serialization/<link>static
#	<library>/http//http/<link>static
    <library>/libtorrent//torrent/<link>static
	
	<library>/global_log//global_log/<link>static
	<library>/WTL
	<library>/osLibs//$(LIBS)
	
	<variant>release:<define>NDEBUG
	
	<toolset>msvc:<define>_UNICODE
	<toolset>msvc:<define>WIN32
	<toolset>msvc:<define>_WINDOWS
	
	<toolset>msvc:<define>_CRT_SECURE_NO_DEPRECATE
	<toolset>msvc:<define>_SCL_SECURE_NO_DEPRECATE
	<toolset>msvc:<define>_CRT_SECURE_NO_WARNINGS
	
	<runtime-link>static
	
	<toolset>msvc:<linkflags>/SUBSYSTEM:WINDOWS
	;

exe Halite
	:
	./src/$(SOURCES)
	./res/$(RESOURCES)
	;

